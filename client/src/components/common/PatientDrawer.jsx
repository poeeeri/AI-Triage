import React, { useState } from 'react';
import { SectionCard } from './SectionCard.jsx';
import { PriorityBadge } from './PriorityBadge.jsx';
import { PatientEditForm } from './PatientEditForm.jsx';
import { ProfileSelectModal } from './ProfileSelectModal.jsx';
import { PROFILE } from '../../utils/constants.js';

export function PatientDrawer({ selected, onClose, onRetriage, onMarkAsSeen, onChangeProfile }) {
  const [isEditing, setIsEditing] = useState(false);
  const [showConfirm, setShowConfirm] = useState(false);
  const [showProfileModal, setShowProfileModal] = useState(false);

  if (!selected) return null;

  const handleRetriageWithEdit = () => {
    setIsEditing(true);
  };

  const handleSaveAndRetriage = (updatedPatient) => {
    setIsEditing(false);
    onRetriage(updatedPatient);
  };

  const handleCancelEdit = () => {
    setIsEditing(false);
  };

  const handleMarkAsSeenClick = () => {
    setShowConfirm(true);
  };

  const handleConfirmMarkAsSeen = () => {
    onMarkAsSeen(selected.id);
    setShowConfirm(false);
    onClose();
  };

  const handleCancelMarkAsSeen = () => {
    setShowConfirm(false);
  };

  const handleChangeProfileClick = () => {
    setShowProfileModal(true);
  };

  const handleSaveProfile = (newProfile) => {
    onChangeProfile(selected.id, newProfile);
    setShowProfileModal(false);
  };

  const handleCancelProfile = () => {
    setShowProfileModal(false);
  };

  return (
    <>
      <div className="fixed inset-0 z-40">
        <div className="absolute inset-0 bg-black/30" onClick={onClose} />
        <div className="absolute right-0 top-0 h-full w-full sm:w-[520px] bg-white shadow-2xl p-5 overflow-y-auto">
          <div className="flex items-center justify-between gap-3">
            <div className="flex items-center gap-3">
              <PriorityBadge item={selected.triage} />
              <div className="font-semibold">–ö–∞—Ä—Ç–æ—á–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞ ‚Äî {selected.id}</div>
            </div>
            <button onClick={onClose} className="text-slate-500 hover:text-slate-800">‚úï</button>
          </div>

          <div className="mt-4 grid gap-3">
            <SectionCard title="–ü—Ä–æ—Ñ–∏–ª—å">
              <div className="flex items-center justify-between">
                <div className="text-sm">
                  <span className="px-2 py-1 rounded-lg bg-blue-100 text-blue-800">
                    {PROFILE.find(x => x.id === selected.profile)?.label || "–¢–µ—Ä–∞–ø–∏—è"}
                  </span>
                </div>
                <button
                  onClick={handleChangeProfileClick}
                  className="text-xs text-blue-600 hover:text-blue-800 underline"
                >
                  –°–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
                </button>
              </div>
            </SectionCard>

            <SectionCard title="–ñ–∞–ª–æ–±—ã">
              <div className="text-sm whitespace-pre-wrap">{selected.complaint}</div>
            </SectionCard>
            
            <SectionCard title="–ê–Ω–∞–º–Ω–µ–∑">
              <div className="text-sm whitespace-pre-wrap">{selected.history || "‚Äî"}</div>
            </SectionCard>
            
            <SectionCard title="–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏">
              <div className="text-sm flex flex-wrap gap-3">
                {selected.vitals?.bp && <span className="px-2 py-1 rounded-lg bg-slate-100">–ê–î {selected.vitals.bp}</span>}
                {selected.vitals?.hr != null && <span className="px-2 py-1 rounded-lg bg-slate-100">–ß–°–° {selected.vitals.hr}</span>}
                {selected.vitals?.spo2 != null && <span className="px-2 py-1 rounded-lg bg-slate-100">SpO‚ÇÇ {selected.vitals.spo2}%</span>}
                {selected.vitals?.temp != null && <span className="px-2 py-1 rounded-lg bg-slate-100">t¬∞ {selected.vitals.temp}</span>}
                {selected.vitals?.rr != null && <span className="px-2 py-1 rounded-lg bg-slate-100">–ß–î–î {selected.vitals.rr}</span>}
                {selected.vitals?.gcs != null && <span className="px-2 py-1 rounded-lg bg-slate-100">GCS {selected.vitals.gcs}</span>}
              </div>
            </SectionCard>

            <SectionCard title="–†–µ—à–µ–Ω–∏–µ AI">
              <div className="text-sm text-slate-700">{selected.triage.reason}</div>
              <div className="mt-2 text-xs text-slate-500">–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {(selected.triage.confidence * 100).toFixed(0)}%</div>
              {selected.triage.redFlags?.length > 0 && (
                <div className="mt-2 flex flex-wrap gap-2">
                  {selected.triage.redFlags.map((rf, i) => (
                    <span key={i} className="text-xs px-2 py-1 rounded-full bg-red-50 text-red-700 border border-red-200">{rf}</span>
                  ))}
                </div>
              )}
            </SectionCard>

            <SectionCard title="–ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –≤—Ä–∞—á–∞">
              <div className="text-sm text-emerald-700 whitespace-pre-wrap leading-relaxed">
                {selected.triage?.hint_for_doctor
                  || (selected.triage?.priorityKey?.includes("–∫—Ä–∏—Ç–∏—á–Ω–æ") && "–ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–π –æ—Å–º–æ—Ç—Ä. –°–Ω—è—Ç—å –≠–ö–ì, –æ–±–µ—Å–ø–µ—á–∏—Ç—å SpO‚ÇÇ ‚â•94%, ASA/–Ω–∏—Ç—Ä–∞—Ç—ã, —Ç—Ä–æ–ø–æ–Ω–∏–Ω—ã, –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.")
                  || (selected.triage?.priorityKey?.includes("—Å—Ä–æ—á–Ω–æ") && "–û—Å–º–æ—Ç—Ä –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –≤–∏—Ç–∞–ª—å–Ω—ã—Ö, –±–∞–∑–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, —ç—Å–∫–∞–ª–∞—Ü–∏—è –ø—Ä–∏ —É—Ö—É–¥—à–µ–Ω–∏–∏.")
                  || "–ü–ª–∞–Ω–æ–≤—ã–π –æ—Å–º–æ—Ç—Ä. –ö–æ–Ω—Ç—Ä–æ–ª—å –≤–∏—Ç–∞–ª—å–Ω—ã—Ö –∏ –±–∞–∑–æ–≤—ã–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ –ø–æ–∫–∞–∑–∞–Ω–∏—è–º."}
              </div>
            </SectionCard>

            <div className="flex items-center gap-2">
              <button
                onClick={handleRetriageWithEdit}
                className="px-4 py-2 rounded-xl bg-blue-600 text-white text-sm hover:bg-blue-700 transition-colors"
              >
                –ü—Ä–æ–≤–µ—Å—Ç–∏ —Ä–µ—Ç—Ä–∏–∞–∂
              </button>
              <button
                onClick={handleMarkAsSeenClick}
                className="px-4 py-2 rounded-xl border border-slate-300 text-slate-700 text-sm hover:bg-slate-50 transition-colors"
              >
                –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –æ—Å–º–æ—Ç—Ä–µ–Ω
              </button>
            </div>

            <div className="text-xs text-slate-500">
              üí° <strong>–†–µ—Ç—Ä–∏–∞–∂</strong> –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏ –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
            </div>
          </div>
        </div>
      </div>

      {isEditing && (
        <PatientEditForm
          patient={selected}
          onSave={handleSaveAndRetriage}
          onCancel={handleCancelEdit}
        />
      )}

      {showConfirm && (
        <div className="fixed inset-0 z-50 flex items-center justify-center">
          <div className="absolute inset-0 bg-black/50" onClick={handleCancelMarkAsSeen} />
          <div className="relative bg-white rounded-xl shadow-lg p-6 max-w-sm mx-4">
            <h3 className="text-lg font-semibold text-slate-800 mb-2">
              –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            </h3>
            <p className="text-slate-600 mb-4">
              –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ—Ç–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞ <strong>{selected.id}</strong> –∫–∞–∫ –æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ?
            </p>
            <div className="flex items-center justify-end gap-3">
              <button
                onClick={handleCancelMarkAsSeen}
                className="px-4 py-2 rounded-lg border border-slate-300 text-slate-700 hover:bg-slate-50 transition-colors"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                onClick={handleConfirmMarkAsSeen}
                className="px-4 py-2 rounded-lg bg-green-600 text-white hover:bg-green-700 transition-colors"
              >
                –î–∞, –æ—Å–º–æ—Ç—Ä–µ–Ω
              </button>
            </div>
          </div>
        </div>
      )}

      {showProfileModal && (
        <ProfileSelectModal
          patient={selected}
          onSave={handleSaveProfile}
          onCancel={handleCancelProfile}
        />
      )}
    </>
  );
}
